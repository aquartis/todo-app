{"version":3,"sources":["components/main/formBlock/form-block-styles.module.scss","components/main/formBlock/addForm/formBlockStyles.module.scss","components/logginUser/loginStyles.module.scss","components/main/mainScreen.module.scss","serviceWorker.js","components/logginUser/LogginUser.js","todo-actions/actions.js","components/logginUser/LogginUserContainer.js","components/main/tasksBlock/filterBlock/filterButton.js","components/main/tasksBlock/filterBlock/filterButtonContainer.js","components/main/tasksBlock/filterBlock/FilterBlockComponent.js","components/main/tasksBlock/showScreen/tasksElements/task.js","components/main/tasksBlock/showScreen/taskScreen/tasksScContainer.js","components/main/tasksBlock/showScreen/taskScreen/TasksScreen.js","components/main/tasksBlock/tasksBlockComponent.js","components/main/formBlock/userInfo/userInfoContainer.js","components/main/formBlock/userInfo/userInfoComponent.js","components/main/formBlock/addForm/addFormContainer.js","components/main/formBlock/addForm/addFormComponent.js","components/main/formBlock/formBlock.js","components/main/mainScreen/MainScreenComponent.js","TodoApp.js","todo-reducers/reducers.js","store/todoStore.js","index.js"],"names":["module","exports","form_block","form_user_block","form_user_statistics","form_user_button","buttons","form_main","show","form_inputs","button_box","login_screen","login_form","user_label","login_button","main","tasks_block","task_box","filter_block","filter_button","taskCard","critical","hight","medium","low","remove_button","result_buttons","status_btns","Boolean","window","location","hostname","match","LogginUser","props","react_default","a","createElement","className","styles","concat","htmlFor","name","placeholder","onChange","e","onChangeUserInput","value","currentUserInput","react_router_dom","to","onClick","disabled","active","SELECT_USER","CURRENT_USER_INPUT","VisibilityFilters","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","PRIORITY_TYPES","CRITICAL","HIGHT","MEDIUM","LOW","ADD_TASK","CHANGE_TITLE","CHANGE_TEXT","CHANGE_SELECT","DELETE_TASK","TASK_SUCCES","TASK_FAIL","GET_TASKS","CHANGE_USER","connect","state","todoData","dispatch","submitUser","type","logUser","trim","LogginUser_LogginUser","input","target","FilterButton","children","propsTypes","PropTypes","func","isRequired","bool","node","ownProps","filter","setVisibilityFilter","FilterBlock","filterButtonContainer","Task","_ref","id","title","priority","completed","text","deleteTask","succes","fail","status","toLowerCase","index_es","icon","faTimes","style","padding","faThumbsUp","faThumbsDown","string","getVisibleTodos","todos","t","Error","TaskScreenContainer","data","allUsers","currentUser","tasks","visibilityFilter","taskSucces","taskFail","map","task","task_Task","Object","assign","TasksBlock","FilterBlockComponent_FilterBlock","tasksScContainer","UserInfoContainer","userName","tasksStatistic","all","length","textDecoration","marginBottom","selectValues","values","el","index","key","AddFormContainer","InputsValues","taskInputs","SelectValues","InputsFunctions","selectOnChange","option","titleOnChange","textOnChange","addTask","buttonStatus","forhtml","alert","FormBlock","userInfoContainer","react_router","path","render","MainScreen","tasksBlockComponent_TasksBlock","formBlock_FormBlock","TodoApp","this","getLocalState","basename","loggin_form","exact","logginUser_LogginUserContainer","MainScreenComponent_MainScreen","React","Component","taskInputsDefault","defaultState","anonim","arguments","undefined","action","newTask","substring","delTask","num","taskStatus","addNewUser","newUser","defineProperty","rootReducer","combineReducers","JSON","parse","localStorage","getItem","setItem","stringify","res","newObj","result","store","createStore","ReactDOM","es","src_TodoApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff3334a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_block\":\"form-block-styles_form_block__4Ym1O\",\"form_user_block\":\"form-block-styles_form_user_block__29Wzf\",\"form_user_statistics\":\"form-block-styles_form_user_statistics__3KNhH\",\"form_user_button\":\"form-block-styles_form_user_button__NJDui\",\"buttons\":\"form-block-styles_buttons__2ZEMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_main\":\"formBlockStyles_form_main__PRpdO\",\"show\":\"formBlockStyles_show__2V8v0\",\"form_inputs\":\"formBlockStyles_form_inputs__2eMnc\",\"button_box\":\"formBlockStyles_button_box__36KWK\",\"buttons\":\"formBlockStyles_buttons__1Ic-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_screen\":\"loginStyles_login_screen__HWylF\",\"login_form\":\"loginStyles_login_form__2TukP\",\"user_label\":\"loginStyles_user_label__HZuW8\",\"login_button\":\"loginStyles_login_button__2KDaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"mainScreen_main__JExps\",\"tasks_block\":\"mainScreen_tasks_block__2uGQx\",\"task_box\":\"mainScreen_task_box__3GdSs\",\"filter_block\":\"mainScreen_filter_block__2H8fz\",\"filter_button\":\"mainScreen_filter_button__153Ix\",\"taskCard\":\"mainScreen_taskCard__UiX5G\",\"critical\":\"mainScreen_critical__1P_x-\",\"hight\":\"mainScreen_hight__1C_7p\",\"medium\":\"mainScreen_medium__H32QL\",\"low\":\"mainScreen_low__1BuwN\",\"remove_button\":\"mainScreen_remove_button__34iE_\",\"result_buttons\":\"mainScreen_result_buttons__2PfeD\",\"status_btns\":\"mainScreen_status_btns__1fDpm\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './loginStyles.module.scss';\r\n\r\nexport const LogginUser=(props)=>(\r\n    <div className={styles.login_screen}>\r\n        <div className={`${styles.login_form} flex-column`}>\r\n        <h2>Hello new user!</h2>\r\n        <label htmlFor='user-name' className={styles.user_label}>\r\n            <input name='user-name' placeholder='Enter username or nickname' onChange={(e)=>props.onChangeUserInput(e)} value={props.currentUserInput}/>\r\n\r\n        </label>\r\n        <div>\r\n                <NavLink to='main'>\r\n                    <button className={styles.login_button} onClick={props.onClick} disabled={props.active}>\r\n                        Let's go\r\n                    </button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)","export const SELECT_USER='SELECT_USER';\r\nexport const CURRENT_USER_INPUT='CURRENT_USER_INPUT';\r\nexport const VisibilityFilters={\r\n    SHOW_ALL:'SHOW_ALL',\r\n    SHOW_COMPLETED:'SHOW_COMPLETED',\r\n    SHOW_ACTIVE:'SHOW_ACTIVE'\r\n}\r\nexport const PRIORITY_TYPES={\r\n    CRITICAL:'CRITICAL',\r\n    HIGHT:'HIGHT',\r\n    MEDIUM:'MEDIUM',\r\n    LOW:'LOW'\r\n}\r\nexport const ADD_USER='ADD_USER';\r\nexport const SET_VISIBILITY_FILTER='SET_VISIBILITY_FILTER';\r\nexport const ALL_USERS='ALL_USERS';\r\nexport const ADD_TASK='ADD_TASK';\r\nexport const CHANGE_TITLE='CHANGE_TITLE'\r\nexport const CHANGE_TEXT='CHANGE_TEXT';\r\nexport const CHANGE_SELECT='CHANGE_SELECT';\r\nexport const DELETE_TASK='DELETE_TASK';\r\nexport const TASK_SUCCES='TASK_SUCCES';\r\nexport const TASK_FAIL='TASK_FAIL';\r\nexport const GET_TASKS='GET_TASKS';\r\nexport const CHANGE_USER='CHANGE_USER';\r\n\r\n\r\n\r\nexport const setVisibilityFilter=(filter)=>(\r\n    {\r\n        type:SET_VISIBILITY_FILTER,\r\n        filter\r\n    }\r\n)\r\n\r\nexport const currentUserInput=(currentUserInput)=>{\r\n    return{\r\n        type:CURRENT_USER_INPUT,\r\n        currentUserInput\r\n    }\r\n}\r\n\r\nexport const selectUser=()=>{\r\n    return{\r\n        type:SELECT_USER\r\n    }\r\n}\r\n\r\nexport const AllUsers=()=>{\r\n    return{\r\n        type:ALL_USERS\r\n    }\r\n}\r\nexport const addNewUser=(user)=>{\r\n    return{\r\n        type:ADD_USER,\r\n        user\r\n    }\r\n}\r\n\r\nexport const addTask=()=>{\r\n    return{\r\n        type:ADD_TASK,\r\n    }\r\n}\r\nexport const changeTitle=(text)=>{\r\n    return{\r\n        type:CHANGE_TITLE,\r\n        text\r\n    }\r\n}\r\nexport const changeText=(text)=>{\r\n    return{\r\n        type:CHANGE_TEXT,\r\n        text\r\n    }\r\n}\r\nexport const changeSelect=(option)=>{\r\n    return{\r\n        type:CHANGE_SELECT,\r\n        option\r\n    }\r\n}\r\n\r\nexport const deleteTask=(id)=>({\r\n    type:DELETE_TASK,\r\n    id\r\n})\r\n\r\nexport const taskSucces=(id)=>({\r\n    type:TASK_SUCCES,\r\n    id\r\n})\r\n\r\nexport const taskFail=(id)=>({\r\n    type:TASK_FAIL,\r\n    id\r\n})\r\n\r\nexport const getTasks=()=>({\r\n    type:GET_TASKS\r\n})\r\n\r\nexport const changeUser=()=>({\r\n    type:CHANGE_USER\r\n})","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { LogginUser } from './LogginUser';\r\nimport {currentUserInput, selectUser} from '../../todo-actions/actions'\r\n\r\nconst mapStateToProps=(state)=>(\r\n    {\r\n        currentUserInput:state.todoData.currentUserInput\r\n    }\r\n)\r\nconst mapDispatchToProps=(dispatch)=>({\r\n    submitUser:(e)=>dispatch(currentUserInput(e)),\r\n    logUser:()=>dispatch(selectUser())\r\n}\r\n)\r\nconst LogginUserContainer=(props)=>{\r\n    const {currentUserInput, submitUser}=props;\r\n    const changeUserInput=(e)=>{\r\n        let input=e.target;\r\n        submitUser(input.value)\r\n    }\r\n    const logUser=()=>{\r\n        props.logUser()\r\n    }\r\nconst active=currentUserInput.trim()===''?true:false;\r\n    return(\r\n        <LogginUser currentUserInput={currentUserInput} onClick={logUser} onChangeUserInput={changeUserInput} active={active}/>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogginUserContainer)\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../../mainScreen.module.scss';\r\n\r\nexport const FilterButton=(props)=>(\r\n    <button className={styles.filter_button}\r\n    onClick={props.onClick}\r\n    disabled={props.active}\r\n    >\r\n    {props.children}</button>\r\n)\r\n\r\nFilterButton.propsTypes={\r\n   onClick:PropTypes.func.isRequired,\r\n   active:PropTypes.bool.isRequired,\r\n   children:PropTypes.node.isRequired\r\n}","import {connect} from 'react-redux';\r\nimport { setVisibilityFilter } from '../../../../todo-actions/actions';\r\nimport { FilterButton } from './filterButton';\r\n\r\n\r\nconst mapStateToProps=(state, ownProps)=>({\r\n    active:ownProps.filter===state.setVisibilityFilter\r\n})\r\nconst mapDispatchToProps=(dispatch, ownProps)=>({\r\n    onClick:()=>dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterButton)","import React from 'react';\r\nimport FilterButton from './filterButtonContainer';\r\nimport { VisibilityFilters } from '../../../../todo-actions/actions';\r\nimport styles from '../../mainScreen.module.scss';\r\n\r\n\r\n\r\nexport const FilterBlock=()=>(\r\n    <div className={`${styles.filter_block} flex-row`}>\r\n        <FilterButton filter={VisibilityFilters.SHOW_ALL}>All</FilterButton>\r\n        <FilterButton filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterButton>\r\n        <FilterButton filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterButton>  \r\n    </div>\r\n)","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faThumbsUp, faThumbsDown, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport styles from '../../../mainScreen.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Task=({id, title, priority, completed, text, deleteTask, succes, fail, status})=>(\r\n    <div className={`${styles.taskCard} ${styles[priority.toLowerCase()]} .flex-column`}>\r\n        <div className={styles.remove_button} onClick={()=>{deleteTask(id)}}>\r\n        <FontAwesomeIcon icon={faTimes}/>\r\n        </div>\r\n        <p>Priority: <span>{priority}</span></p>\r\n        <p>Title: <span>{title}</span></p>\r\n        <p>{text}</p>\r\n        {completed?<div>\r\n            {status==='succes'?<p>Nice work.You done this task</p>:\r\n        <p>Not good...You fail, try better next time.</p>}\r\n        </div>:\r\n            <div className={styles.result_buttons}>\r\n            <span className={styles.status_btns} style={{padding:'0 .5rem'}} onClick={()=>succes(id)}>\r\n                 <FontAwesomeIcon icon={faThumbsUp}/>  </span>\r\n            <span className={styles.status_btns} onClick={()=>fail(id)}>\r\n                <FontAwesomeIcon icon={faThumbsDown}/>\r\n            </span>\r\n</div> }\r\n        \r\n    </div>\r\n)\r\n\r\nTask.propsTypes={\r\n    title:PropTypes.string.isRequired,\r\n    priority:PropTypes.string.isRequired,\r\n    completed:PropTypes.string.isRequired,\r\n    text:PropTypes.string.isRequired\r\n}","import {connect} from 'react-redux';\r\nimport { TaskScreen } from './TasksScreen';\r\nimport { VisibilityFilters, deleteTask, taskSucces, taskFail } from '../../../../../todo-actions/actions';\r\n\r\nfunction getVisibleTodos(todos, filter){\r\n    switch(filter){\r\n        case VisibilityFilters.SHOW_ALL:\r\n            return todos;\r\n        case VisibilityFilters.SHOW_COMPLETED:\r\n            return todos.filter(t=>t.completed);\r\n        case VisibilityFilters.SHOW_ACTIVE:\r\n            return todos.filter(t=>!t.completed);\r\n        default:\r\n            throw Error('Uncnown filter: '+filter)\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n   data:getVisibleTodos(state.todoData.allUsers[state.todoData.currentUser].tasks, state.visibilityFilter)\r\n})\r\nconst mapDispatchToProps=(dispatch)=>({\r\n    deleteTask:(id)=>dispatch(deleteTask(id)),\r\n    succes:(id)=>dispatch(taskSucces(id)),\r\n    fail:(id)=>dispatch(taskFail(id))\r\n})\r\nconst TaskScreenContainer= connect(mapStateToProps, mapDispatchToProps)(TaskScreen)\r\nexport default TaskScreenContainer;","import React from 'react';\r\nimport { Task } from '../tasksElements/task';\r\nimport styles from '../../../mainScreen.module.scss';\r\n\r\nexport const TaskScreen=({data, deleteTask, succes, fail})=>{\r\n    const tasks=data.map((task)=>{\r\n        return(\r\n            <Task {...task} deleteTask={deleteTask} succes={succes} fail={fail}/>\r\n        ) \r\n    })\r\n    return <div className={`${styles.task_box} flex-row` }>{tasks}</div>\r\n}","import React from 'react';\r\nimport { FilterBlock } from './filterBlock/FilterBlockComponent';\r\nimport styles from '../mainScreen.module.scss';\r\nimport TaskScreenContainer from './showScreen/taskScreen/tasksScContainer';\r\n\r\nexport const TasksBlock=()=>(\r\n    <div className={`${styles.tasks_block}` }>\r\n        <FilterBlock/>\r\n        <TaskScreenContainer/>\r\n    </div>\r\n    \r\n)","import {connect} from 'react-redux';\r\nimport { UserInfo } from './userInfoComponent';\r\n\r\nconst getStatistic=(tasks)=>{\r\n    const all=tasks.length;\r\n    const completed=tasks.filter(t=>t.completed).length;\r\n    const active=tasks.filter(t=>!t.completed).length;\r\n    return {\r\n        all,\r\n        completed,\r\n        active\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    userName:state.todoData.currentUser,\r\n    tasksStatistic:getStatistic(state.todoData.allUsers[state.todoData.currentUser].tasks)\r\n})\r\nconst UserInfoContainer=connect(mapStateToProps)(UserInfo)\r\nexport default UserInfoContainer;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../form-block-styles.module.scss';\r\n\r\nexport const UserInfo=({userName, tasksStatistic})=>{\r\n    return(\r\n        <div className={`${styles.form_user_block} flex-column`}>\r\n            <div className={styles.form_user_statistics}>\r\n                <h3>User: <span>{userName}</span></h3>\r\n                <p>Number of tasks: <span>{tasksStatistic.all}</span></p>\r\n                <p>Completed: <span>{tasksStatistic.completed}</span></p>\r\n                <p>Active: <span>{tasksStatistic.active}</span></p>\r\n            </div>\r\n            <div className={`${styles.form_user_button} flex-column`}>\r\n                <NavLink  style={{textDecoration:'none',  marginBottom:'1rem'}} to='/'>\r\n                    <span className={styles.buttons}>Change user</span>\r\n                </NavLink>\r\n                <NavLink style={{textDecoration:'none'}}  to='/main/add_task'>\r\n                    <span className={styles.buttons}>\r\n                        Add task\r\n                    </span>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nUserInfo.propTypes={\r\n    userName:PropTypes.string.isRequired,\r\n    tasksStatistic:PropTypes.shape({\r\n        all:PropTypes.number.isRequired,\r\n        completed:PropTypes.number.isRequired,\r\n        active:PropTypes.number.isRequired\r\n    }).isRequired\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { PRIORITY_TYPES, changeSelect, changeTitle, changeText, addTask } from '../../../../todo-actions/actions';\r\nimport { AddForm } from './addFormComponent';\r\n\r\nconst selectValues=Object.values(PRIORITY_TYPES).map((el,index)=><option key={index} value={el}>{el}</option>);\r\n\r\n\r\nconst mapStateToProps=(state)=>(\r\n    {\r\n        InputsValues:state.todoData.taskInputs,\r\n        SelectValues:selectValues\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps=(dispatch)=>(\r\n    {\r\n        InputsFunctions:{\r\n            selectOnChange:(e)=>dispatch(changeSelect(e.target.value)),\r\n            titleOnChange:(e)=>dispatch(changeTitle(e.target.value)),\r\n            textOnChange:(e)=>dispatch(changeText(e.target.value)),\r\n            addTask:()=>dispatch(addTask())\r\n        }\r\n    }\r\n)\r\nexport const AddFormContainer=connect(mapStateToProps, mapDispatchToProps)(AddForm);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './formBlockStyles.module.scss';\r\n\r\nexport const AddForm=({SelectValues, InputsValues, InputsFunctions})=>{\r\n    const buttonStatus=(InputsValues.title.trim()!=='' && InputsValues.text.trim()!=='');\r\n    return (\r\n        <div className={`${styles.form_main} flex-column`}>\r\n            <form className={`${styles.form_inputs} flex-column`}> \r\n            <label forhtml='priority'><span>Chose prioruty:</span> \r\n                <select name='priority' value={InputsValues.priority} onChange={InputsFunctions.selectOnChange}>\r\n                    {SelectValues}\r\n                </select>\r\n            </label>\r\n            <label forhtml='title_input'><span>Task title:</span>\r\n                <input name='title_input' value={InputsValues.title} onChange={(e)=>InputsFunctions.titleOnChange(e)}/>\r\n            </label>\r\n            <label forhtml='text_input'><span>Task text: </span>\r\n                <textarea value={InputsValues.text} onChange={InputsFunctions.textOnChange}/>\r\n            </label>\r\n        </form>\r\n        <div className={`${styles.button_box} flex-column`}>\r\n            <button className={styles.buttons} onClick={buttonStatus?()=>InputsFunctions.addTask():()=>alert('Fill tasks fields!')}>Add</button>\r\n            <button className={styles.buttons}>\r\n                <NavLink style={{textDecoration:'none'}} to='/main'><span className={styles.buttons}>Close</span></NavLink>\r\n            </button>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nAddForm.propTypes={\r\n    SelectValues:PropTypes.array.isRequired,\r\n    InputsValues:PropTypes.shape({\r\n        priority:PropTypes.string.isRequired,\r\n        title:PropTypes.string.isRequired,\r\n        text:PropTypes.string.isRequired\r\n    }).isRequired\r\n}","import React from 'react';\r\nimport styles from './form-block-styles.module.scss';\r\nimport UserInfoContainer from './userInfo/userInfoContainer';\r\nimport {Route} from 'react-router-dom'\r\nimport { AddFormContainer } from './addForm/addFormContainer';\r\n\r\nexport const FormBlock=()=>(\r\n    <div className={styles.form_block}>\r\n        <UserInfoContainer/>\r\n        <Route path='/main/add_task' render={()=><AddFormContainer/>}/>\r\n    </div>\r\n)","import React from 'react';\r\nimport styles from '../mainScreen.module.scss';\r\nimport { TasksBlock } from '../tasksBlock/tasksBlockComponent';\r\nimport { FormBlock } from '../formBlock/formBlock';\r\n\r\n\r\n\r\n\r\n export const MainScreen =()=>{\r\n        return(\r\n            <div className={`${styles.main} flex-row`}>\r\n             <TasksBlock/>\r\n             <FormBlock/>\r\n             </div>\r\n        )\r\n    }\r\n","import React from 'react';\r\nimport {HashRouter, Route} from 'react-router-dom';\r\nimport styles from './TodoApp.module.scss';\r\nimport LogginUserContainer from './components/logginUser/LogginUserContainer';\r\nimport  {MainScreen}  from './components/main/mainScreen/MainScreenComponent';\r\nimport {connect} from 'react-redux';\r\nimport { getTasks } from './todo-actions/actions';\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n  getLocalState:()=>dispatch(getTasks())\r\n})\r\n\r\nclass TodoApp extends React.Component {\r\ncomponentDidMount(){\r\n    this.props.getLocalState();\r\n}\r\nrender(){\r\n  return (\r\n    <HashRouter basename='https://aquartis.github.io/todo-app'>\r\n      <div className={styles.loggin_form}>\r\n        <Route exact path='/' render={()=><LogginUserContainer/>}/>\r\n        <Route path='/main' render={()=><MainScreen/>}/>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(TodoApp);","import { SELECT_USER, CURRENT_USER_INPUT, VisibilityFilters, SET_VISIBILITY_FILTER, ADD_TASK, PRIORITY_TYPES, CHANGE_SELECT, CHANGE_TITLE, CHANGE_TEXT, DELETE_TASK, TASK_SUCCES, TASK_FAIL, GET_TASKS, CHANGE_USER } from \"../todo-actions/actions\";\r\n\r\nconst taskInputsDefault={\r\n    priority:PRIORITY_TYPES.MEDIUM,\r\n    title:'',\r\n    text:''\r\n}\r\n\r\nlet defaultState={\r\n    currentUser:'anonim',\r\n    currentUserInput:'anonim',\r\n    allUsers:{\r\n        anonim:{\r\n            name:'anonim',\r\n            tasks:[ \r\n                {\r\n                    id:'Not1',\r\n                    title:'Some task',\r\n                    priority:'CRITICAL',\r\n                    completed:false,\r\n                    text:'Notice that the faCoffee icon is imported from @fortawesome/free-solid-svg-icons as an object and then provided to the icon prop as an object.Explicitly importing icons like this allows us to subset Font Awesom \"s thousands of icons to include only those you use in your final bundled file.'\r\n                },\r\n                {\r\n                    id:'Tex2',\r\n                    title:'Some task 1',\r\n                    priority:'HIGHT',\r\n                    completed:false,\r\n                    text:'Text of what need to do.'\r\n                },\r\n                {\r\n                    id:'Tex3',\r\n                    title:'Some task 2',\r\n                    priority:'MEDIUM',\r\n                    completed:true,\r\n                    text:'Text of what need to do.'\r\n                },\r\n                {\r\n                    id:'Tex4',\r\n                    title:'Some task 2',\r\n                    priority:'LOW',\r\n                    completed:false,\r\n                    text:'Text of what need to do.'\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    taskInputs:taskInputsDefault\r\n}\r\n\r\n\r\n\r\nexport const visibilityFilter=(state=VisibilityFilters.SHOW_ALL, action)=>{\r\n    switch(action.type){\r\n        case SET_VISIBILITY_FILTER:\r\n            return action.filter;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function todoData(state=defaultState, action){\r\n    switch(action.type){\r\n        case GET_TASKS:\r\n            let tasks=JSON.parse(localStorage.getItem('tasks'));\r\n            return Object.assign({}, state,  {allUsers:tasks});\r\n        case CHANGE_USER:\r\n                localStorage.setItem('tasks', JSON.stringify(state.allUsers));\r\n                return state;\r\n        case SELECT_USER:\r\n            let res=Object.assign({},state, {currentUser:state.currentUserInput}, {allUsers:addNewUser(state.allUsers, state.currentUserInput)});\r\n            localStorage.setItem('tasks', JSON.stringify(res.allUsers));\r\n            return res;\r\n        case CURRENT_USER_INPUT:\r\n            return Object.assign({}, state, {currentUserInput:action.currentUserInput});\r\n        case ADD_TASK:\r\n                let newObj=Object.assign({}, state);\r\n                newObj.allUsers[state.currentUser].tasks=addTask(newObj.allUsers[state.currentUser].tasks, state.taskInputs);\r\n                localStorage.setItem('tasks', JSON.stringify(newObj.allUsers));\r\n                return Object.assign({}, state, newObj, {taskInputs:taskInputs(state.taskInputs, action)});\r\n        case DELETE_TASK:\r\n                let result=Object.assign({}, state, state.allUsers[state.currentUser].tasks=delTask(state.allUsers[state.currentUser].tasks, action.id));\r\n                localStorage.setItem('tasks', JSON.stringify(result.allUsers));\r\n                return result;\r\n        case TASK_SUCCES:\r\n        case TASK_FAIL:\r\n            return   Object.assign({}, state, state.allUsers[state.currentUser].tasks=taskStatus(state.allUsers[state.currentUser].tasks, action));             \r\n        case CHANGE_SELECT:\r\n        case CHANGE_TITLE:\r\n        case CHANGE_TEXT:\r\n            return Object.assign({}, state, {taskInputs:taskInputs(state.taskInputs, action)})    \r\n        default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport function taskInputs(state=taskInputsDefault, action){\r\n    switch(action.type){\r\n        case CHANGE_SELECT:\r\n            return Object.assign({}, state, {priority:action.option});\r\n        case CHANGE_TITLE:\r\n            return Object.assign({}, state, {title:action.text});\r\n        case CHANGE_TEXT:\r\n            return Object.assign({}, state, {text:action.text});\r\n        case ADD_TASK:\r\n            return Object.assign({}, state, taskInputsDefault)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst addTask=(state, task)=>{\r\n    let newTask=[{\r\n        id:task.text.substring(0,3)+state.length+1,\r\n        title:task.title,\r\n        priority:task.priority,\r\n        completed:false,\r\n        text:task.text\r\n    }];\r\n    return state.concat(newTask);\r\n}\r\nconst delTask=(state, num)=>{\r\n    let result=state.filter(el=>el.id!==num);\r\n    return result;\r\n}\r\n\r\nconst taskStatus=(state,action)=>{\r\n    switch(action.type){\r\n        case TASK_SUCCES:\r\n            return state.map(el=>{\r\n                if(el.id===action.id){\r\n                    el.completed=true;\r\n                    el.status='succes';\r\n                }\r\n                return el;\r\n            });\r\n        case TASK_FAIL:\r\n            return state.map(el=>{\r\n                if(el.id===action.id){\r\n                    el.completed=true;\r\n                    el.status='fail';\r\n                }\r\n                return el;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst addNewUser=(state, name)=>{\r\n    const newUser={\r\n        [name]:{\r\n            name:name,\r\n            tasks:[]\r\n        }\r\n    }\r\n    return Object.assign({}, newUser, state)\r\n}","import {createStore} from 'redux';\r\nimport {combineReducers} from 'redux';\r\nimport { todoData,visibilityFilter} from '../todo-reducers/reducers';\r\n\r\n\r\nconst rootReducer=combineReducers({\r\n    todoData,\r\n    visibilityFilter,\r\n})\r\nconst store=createStore(rootReducer);\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport TodoApp from './TodoApp';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store/todoStore';\r\n\r\nconst App=()=>(\r\n    <Provider store={store}>\r\n        <TodoApp/>\r\n    </Provider>\r\n)\r\nwindow.store=store;\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}